Subject: cleanup - remove warning errors and Makefile cruft (#478)
Index:	 src/bin/tcsh, src/games/{backgammon,mille,hack,adventure}, lib/ccom, new/rcs, ucb/pascal, src/usr.bin/dc

Description:
	1) Warning errors, many in the very old games/ sources, were being 
	   printed during compilation.
	
	2) There is an un-used character array in the rcs/src/partime.c file
	
	3) Un-needed target rule is present in the tcsh/Makefile

	4) Numerous Makefiles lacked the C optimizer flag -O in some targets

	5) backgammon(8) would terminate when \0177 (DEL)  was received rather 
	   than erase the previous character.  This would happen even if
	   the erase character had been set to \0177
	   

Repeat-By:
	Observation.
	
	1,2,3) a top level recompile of the system will show the warning
	       messages.  Running 'lint' would probably find more warnings ;)
	
	4) Observation / 'grep' ;)

	5) stty erase '^?'
	   /usr/games/backgammon
	   enter DEL character and the game will exit.

Fix:
	Cut where indicated and save to /tmp/478.patch

cd /
patch -p0 < /tmp/478.patch

	Most of the changes don't change the code and so recompilation is not
	needed.  

	backgammon(8) did have code changes made so it is to be recompiled.
	
	Three other programs 'tcsh', 'dc' and the 'rcs' utilities will see 
	a decrease in size (several clicks for tcsh).  Recompilation is 
	recommended.

cd /usr/src/games/backgammon
make install
make clean

cd /usr/src/bin/tcsh
make install
make clean

cd /usr/src/usr.bin/dc
make install
make clean

cd /usr/src/new/rcs/src
make install
make clean

	Thanks go to bqt@softjar.se for dropping the patch into my inbox.

	This and previous updates to 2.11BSD are available at the following
	locations:
	
	ftp://ftp.dfupdate.se/pub/pdp11/2.11BSD
	https://www.tuhs.org/Archive/Distributions/UCB/2.11BSD/Patches/
	ftp://ftp.2bsd.com/2.11BSD

---------------------------cut here--------------------
*** ./usr/src/bin/tcsh/Makefile.old	Wed Dec 18 20:52:43 2019
--- ./usr/src/bin/tcsh/Makefile	Mon Oct  3 16:33:17 2022
***************
*** 1,4 ****
! #	Makefile	4.4	2019/12/17
  #
  # C Shell with process control; VM/UNIX VAX Makefile
  # Bill Joy UC Berkeley; Jim Kulp IIASA, Austria
--- 1,4 ----
! #	Makefile	4.5	2022/10/2
  #
  # C Shell with process control; VM/UNIX VAX Makefile
  # Bill Joy UC Berkeley; Jim Kulp IIASA, Austria
***************
*** 10,35 ****
  VERSION=6.00
  BUILD=tcsh
  
- ################################################################
- ## CFLAGS.  For various -D things, see config.h
- ################################################################
- # These are the default suffixes from .c to .o and -c to get there
- SUF=o
- CF=-c
- 
  LFLAGS=-I.
  
  SYSDEFINE=pdp11
  CFLAGS= -I. -O -D${SYSDEFINE}
  
- ################################################################
- ## LDLAGS.  Define something here if you need to
- ################################################################
  LDFLAGS=-i -X
  
- ################################################################
- ## LIBES.  Edit as needed.
- ################################################################
  LIBES= -ltermcap		## BSD style things
  
  CC=	cc
--- 10,22 ----
***************
*** 53,80 ****
  	sh.set.c sh.time.c sh.char.h sh.dir.h sh.proc.h sh.h 
  PSSRCS= sh.decls.h glob.c glob.h
  SHSRCS= ${ASSRCS} ${PSSRCS}
! SHOBJS=	sh.${SUF} sh.dir.${SUF} sh.dol.${SUF} sh.err.${SUF} sh.exec.${SUF} \
! 	sh.char.${SUF} sh.exp.${SUF} sh.func.${SUF} sh.glob.${SUF} \
! 	sh.hist.${SUF} sh.init.${SUF} sh.lex.${SUF} sh.misc.${SUF} \
! 	sh.parse.${SUF} sh.print.${SUF} sh.proc.${SUF} sh.sem.${SUF} \
! 	sh.set.${SUF} sh.time.${SUF} glob.${SUF}
  
  TWSRCS= tw.decls.h tw.h tw.help.c tw.init.c tw.parse.c tw.spell.c
! TWOBJS=	tw.help.${SUF} tw.init.${SUF} tw.parse.${SUF} tw.spell.${SUF}
  
  EDSRCS= ed.chared.c ed.decls.h ed.defns.c ed.h ed.init.c ed.inputl.c \
  	ed.refresh.c ed.screen.c ed.xmap.c
! EDOBJS=	ed.chared.${SUF} ed.refresh.${SUF} ed.screen.${SUF} ed.init.${SUF} \
! 	ed.inputl.${SUF} ed.defns.${SUF} ed.xmap.${SUF}
  
  TCSRCS= tc.alloc.c tc.bind.c tc.const.c tc.decls.h tc.disc.c \
  	tc.func.c tc.os.c tc.os.h tc.printf.c tc.prompt.c \
  	tc.sched.c tc.sig.c tc.sig.h tc.str.c sh.types.h tc.vers.c tc.wait.h \
  	tc.who.c tc.h
! TCOBJS=	tc.alloc.${SUF} tc.bind.${SUF} tc.const.${SUF} tc.disc.${SUF} \
! 	tc.func.${SUF} tc.os.${SUF} tc.printf.${SUF} \
! 	tc.prompt.${SUF} tc.sched.${SUF} tc.sig.${SUF} tc.str.${SUF} \
! 	tc.vers.${SUF} tc.who.${SUF} 
  
  PVSRCS= Makefile
  AVSRCS= Fixes MAKEDIFFS NewThings README FAQ WishList \
--- 40,67 ----
  	sh.set.c sh.time.c sh.char.h sh.dir.h sh.proc.h sh.h 
  PSSRCS= sh.decls.h glob.c glob.h
  SHSRCS= ${ASSRCS} ${PSSRCS}
! SHOBJS=	sh.o sh.dir.o sh.dol.o sh.err.o sh.exec.o \
! 	sh.char.o sh.exp.o sh.func.o sh.glob.o \
! 	sh.hist.o sh.init.o sh.lex.o sh.misc.o \
! 	sh.parse.o sh.print.o sh.proc.o sh.sem.o \
! 	sh.set.o sh.time.o glob.o
  
  TWSRCS= tw.decls.h tw.h tw.help.c tw.init.c tw.parse.c tw.spell.c
! TWOBJS=	tw.help.o tw.init.o tw.parse.o tw.spell.o
  
  EDSRCS= ed.chared.c ed.decls.h ed.defns.c ed.h ed.init.c ed.inputl.c \
  	ed.refresh.c ed.screen.c ed.xmap.c
! EDOBJS=	ed.chared.o ed.refresh.o ed.screen.o ed.init.o \
! 	ed.inputl.o ed.defns.o ed.xmap.o
  
  TCSRCS= tc.alloc.c tc.bind.c tc.const.c tc.decls.h tc.disc.c \
  	tc.func.c tc.os.c tc.os.h tc.printf.c tc.prompt.c \
  	tc.sched.c tc.sig.c tc.sig.h tc.str.c sh.types.h tc.vers.c tc.wait.h \
  	tc.who.c tc.h
! TCOBJS=	tc.alloc.o tc.bind.o tc.const.o tc.disc.o \
! 	tc.func.o tc.os.o tc.printf.o \
! 	tc.prompt.o tc.sched.o tc.sig.o tc.str.o \
! 	tc.vers.o tc.who.o 
  
  PVSRCS= Makefile
  AVSRCS= Fixes MAKEDIFFS NewThings README FAQ WishList \
***************
*** 177,202 ****
  	-Y -ltermcap -lc
  	@-size $@
  
! .c.${SUF}: ${MKSTR}
  	${MKSTR} - ${STRINGFILE} x $*.c
! 	${CC} -E ${CFLAGS} x$*.c | ${XSTR} ${CF} -
  	rm -f x$*.c
! 	${CC} ${CFLAGS} ${CF} x.c 
  	mv x.o $*.o
  	rm -f x.c
  
  strings.o: strings
  	${XSTR}
! 	${CC} ${CF} xs.c
  	mv -f xs.o strings.o
  	rm -f xs.c
  
- ed.init.o: ed.init.c
- 	${CC} -E ${CFLAGS} $*.c | ${XSTR} ${CF} -
- 	${CC} -R ${CF} ${CF} x.c 
- 	mv -f x.o $*.o
- 	rm -f x.c
- 
  ed.defns.h: ed.defns.c
  	@rm -f $@
  	@echo '/* Do not edit this file, make creates it. */' > $@
--- 164,183 ----
  	-Y -ltermcap -lc
  	@-size $@
  
! .c.o: ${MKSTR}
  	${MKSTR} - ${STRINGFILE} x $*.c
! 	${CC} -E ${CFLAGS} x$*.c | ${XSTR} -c -
  	rm -f x$*.c
! 	${CC} ${CFLAGS} -c x.c 
  	mv x.o $*.o
  	rm -f x.c
  
  strings.o: strings
  	${XSTR}
! 	${CC} -c xs.c
  	mv -f xs.o strings.o
  	rm -f xs.c
  
  ed.defns.h: ed.defns.c
  	@rm -f $@
  	@echo '/* Do not edit this file, make creates it. */' > $@
***************
*** 220,232 ****
  	    sed -e 's/Char \([a-zA-Z0-9_]*\)\(.*\)/extern Char \1[];/' | \
  	    sort >> $@
  
! csh.prof: ${OBJS} sh.prof.${SUF} mcrt0.${SUF}
  	rm -f csh.prof
! 	ld -X mcrt0.${SUF} ${OBJS} -o csh.prof ${LIBES} -lc
  
! sh.prof.${SUF}:
  	cp sh.c sh.prof.c
! 	${CC} ${CF} ${CFLAGS} -DPROF sh.prof.c
  
  lint: tc.const.h ed.defns.h
  	lint ${LFLAGS} sh*.c tw*.c ed*.c tc.*.c ${LIBES}
--- 201,213 ----
  	    sed -e 's/Char \([a-zA-Z0-9_]*\)\(.*\)/extern Char \1[];/' | \
  	    sort >> $@
  
! csh.prof: ${OBJS} sh.prof.o mcrt0.o
  	rm -f csh.prof
! 	ld -X mcrt0.o ${OBJS} -o csh.prof ${LIBES} -lc
  
! sh.prof.o:
  	cp sh.c sh.prof.c
! 	${CC} -c ${CFLAGS} -DPROF sh.prof.c
  
  lint: tc.const.h ed.defns.h
  	lint ${LFLAGS} sh*.c tw*.c ed*.c tc.*.c ${LIBES}
***************
*** 234,240 ****
  print:
  	@pr READ_ME
  	@pr makefile makefile.*
! 	@(size -l a.out; size *.${SUF}) | pr -h SIZES
  	@${CXREF} sh*.c | pr -h XREF
  	@ls -l | pr 
  	@pr sh*.h [a-rt-z]*.h sh*.c alloc.c
--- 215,221 ----
  print:
  	@pr READ_ME
  	@pr makefile makefile.*
! 	@(size -l a.out; size *.o) | pr -h SIZES
  	@${CXREF} sh*.c | pr -h XREF
  	@ls -l | pr 
  	@pr sh*.h [a-rt-z]*.h sh*.c alloc.c
***************
*** 251,257 ****
  
  clean:
  	${RM} -f a.out strings x.c xs.c tcsh _MAKE_LOG core ./mkprstr
! 	${RM} -f *.${SUF} sh.prof.c ed.defns.h tc.const.h sh.err.h
  	${RM} -f ${STRINGFILE} tcsh.${CATSECT}
  
  veryclean: clean
--- 232,238 ----
  
  clean:
  	${RM} -f a.out strings x.c xs.c tcsh _MAKE_LOG core ./mkprstr
! 	${RM} -f *.o sh.prof.c ed.defns.h tc.const.h sh.err.h
  	${RM} -f ${STRINGFILE} tcsh.${CATSECT}
  
  veryclean: clean
***************
*** 273,281 ****
  ed.h: ed.decls.h
  
  # ed.h
! EDINC=sh.${SUF} sh.func.${SUF} sh.lex.${SUF} sh.print.${SUF} sh.proc.${SUF} \
!       sh.set.${SUF} tc.bind.${SUF} tc.os.${SUF} tc.prompt.${SUF} \
!       tc.sched.${SUF} tw.parse.${SUF}
  ${EDOBJS} ${EDINC} : ed.h
  
  # sh.h
--- 254,262 ----
  ed.h: ed.decls.h
  
  # ed.h
! EDINC=sh.o sh.func.o sh.lex.o sh.print.o sh.proc.o \
!       sh.set.o tc.bind.o tc.os.o tc.prompt.o \
!       tc.sched.o tw.parse.o
  ${EDOBJS} ${EDINC} : ed.h
  
  # sh.h
***************
*** 282,294 ****
  ${OBJS}: config.h sh.h
  
  # tw.h:
! TWINC=ed.chared.${SUF} ed.inputl.${SUF} sh.exec.${SUF} sh.func.${SUF} \
!       sh.set.${SUF} tc.func.${SUF}
  ${TWOBJS} ${TWINC}: tw.h
  
  # glob.h
! glob.${SUF} sh.glob.${SUF}: glob.h
  
  # ed.defns.h
! EDDINC=tc.bind.${SUF} tc.func.${SUF} tc.os.${SUF}
  ${EDOBJS} ${EDDINC}: ed.defns.h
--- 263,275 ----
  ${OBJS}: config.h sh.h
  
  # tw.h:
! TWINC=ed.chared.o ed.inputl.o sh.exec.o sh.func.o \
!       sh.set.o tc.func.o
  ${TWOBJS} ${TWINC}: tw.h
  
  # glob.h
! glob.o sh.glob.o: glob.h
  
  # ed.defns.h
! EDDINC=tc.bind.o tc.func.o tc.os.o
  ${EDOBJS} ${EDDINC}: ed.defns.h
*** ./usr/src/bin/tcsh/glob.c.old	Wed Aug 21 13:09:46 1991
--- ./usr/src/bin/tcsh/glob.c	Mon Oct  3 16:38:52 2022
***************
*** 36,43 ****
   */
  #include "config.h"
  #if defined(LIBC_SCCS) && !defined(lint)
! static char sccsid[] = "@(#)glob.c	5.12 (Berkeley) 6/24/91";
! #endif /* LIBC_SCCS and not lint */
  /*
   * Glob: the interface is a superset of the one defined in POSIX 1003.2,
   * draft 9.
--- 36,43 ----
   */
  #include "config.h"
  #if defined(LIBC_SCCS) && !defined(lint)
! static char sccsid[] = "@(#)glob.c	5.13 (2.11BSD) 2022/10/2";
! #endif
  /*
   * Glob: the interface is a superset of the one defined in POSIX 1003.2,
   * draft 9.
***************
*** 218,224 ****
  
  static Char *
  Strchr(str, ch)
!     Char *str;
      int ch;
  {
      do
--- 218,224 ----
  
  static Char *
  Strchr(str, ch)
!     register Char *str;
      int ch;
  {
      do
***************
*** 648,654 ****
  	}
  	*npp = NULL;	/* no assumption that slots are NULL */
  	pglob->gl_p_v = pathv;
! 	xfree(opathv);	/* free the old base pointer; data has been copied */
      } else {
  	/* still room for more */
  	pathv = pglob->gl_p_v;
--- 648,654 ----
  	}
  	*npp = NULL;	/* no assumption that slots are NULL */
  	pglob->gl_p_v = pathv;
! 	xfree((ptr_t) opathv);	/* free the old base pointer; data has been copied */
      } else {
  	/* still room for more */
  	pathv = pglob->gl_p_v;
*** ./usr/src/games/adventure/Makefile.old	Wed Feb 25 21:16:26 1987
--- ./usr/src/games/adventure/Makefile	Mon Oct  3 16:42:59 2022
***************
*** 1,4 ****
! #	Makefile	4.3	85/09/07
  
  DESTDIR=
  SEPFLAG= -i
--- 1,4 ----
! #	Makefile	4.4	2022/10/2
  
  DESTDIR=
  SEPFLAG= -i
***************
*** 7,13 ****
  HFILES = hdr.h
  SRCS = $(CFILES) $(HFILES) glorkz
  CFLAGS=	-O
! LDFLAGS=-n	# should be -i on small machines, -n on a vax
  
  advent:	a.out
  	rm -f advent
--- 7,13 ----
  HFILES = hdr.h
  SRCS = $(CFILES) $(HFILES) glorkz
  CFLAGS=	-O
! LDFLAGS=-i	# should be -i on small machines, -n on a vax
  
  advent:	a.out
  	rm -f advent
***************
*** 16,23 ****
  a.out: ${OBJS}
  	${CC} ${SEPFLAG} ${LDFLAGS} ${CFLAGS} ${OBJS}
  
! save.o:	save.c	# vax C optimizer bug - infinite loop
! 	cc -c save.c
  
  # always recomple okplay
  okplay.o: /tmp
--- 16,23 ----
  a.out: ${OBJS}
  	${CC} ${SEPFLAG} ${LDFLAGS} ${CFLAGS} ${OBJS}
  
! save.o:	save.c
! 	cc ${CFLAGS} -c save.c
  
  # always recomple okplay
  okplay.o: /tmp
***************
*** 46,53 ****
  
  clean:
  	rm -f ${OBJS} a.out advent core errs
- 
- sources: $(SRCS)
- 
- $(SRCS):
- 	sccs get $@
--- 46,48 ----
*** ./usr/src/games/backgammon/main.c.old	Wed Aug 26 00:18:53 1987
--- ./usr/src/games/backgammon/main.c	Mon Oct  3 16:21:36 2022
***************
*** 4,18 ****
   * specifies the terms and conditions for redistribution.
   */
  
! #ifndef lint
  char copyright[] =
  "@(#) Copyright (c) 1980 Regents of the University of California.\n\
   All rights reserved.\n";
- #endif not lint
  
! #ifndef lint
! static char sccsid[] = "@(#)main.c	5.1 (Berkeley) 5/29/85";
! #endif not lint
  
  #include <stdio.h>
  #include "back.h"
--- 4,16 ----
   * specifies the terms and conditions for redistribution.
   */
  
! #if	!defined(lint) && defined(DOSCCS)
  char copyright[] =
  "@(#) Copyright (c) 1980 Regents of the University of California.\n\
   All rights reserved.\n";
  
! static char sccsid[] = "@(#)main.c	5.1 (2.11BSD) 2022/10/3";
! #endif
  
  #include <stdio.h>
  #include "back.h"
*** ./usr/src/games/backgammon/message.c.old	Sat Apr 27 08:47:45 2019
--- ./usr/src/games/backgammon/message.c	Mon Oct  3 16:23:51 2022
***************
*** 4,15 ****
   * specifies the terms and conditions for redistribution.
   */
  
! #ifndef lint
! static char Msccsid[] = "@(#)Mesgfix	5.2 (Berkeley) 1/8/86";
! static char sccsid[] = "@(#)message.c	4.3 (Berkeley) 1/11/86";
! #endif not lint
  
  char	*message[] = {
! 	"Last update on Saturday, April 27, 2019.",
  	0
  };
--- 4,14 ----
   * specifies the terms and conditions for redistribution.
   */
  
! #if	!defined(lint) && defined(DOSCCS)
! static char sccsid[] = "@(#)message.c	4.4 (2.11BSD) 2022/10/3";
! #endif
  
  char	*message[] = {
! 	"Last update on Monday, October 3, 2022.",
  	0
  };
*** ./usr/src/games/backgammon/subs.c.old	Wed May 29 13:37:43 1985
--- ./usr/src/games/backgammon/subs.c	Mon Oct  3 16:24:21 2022
***************
*** 4,12 ****
   * specifies the terms and conditions for redistribution.
   */
  
! #ifndef lint
! static char sccsid[] = "@(#)subs.c	5.1 (Berkeley) 5/29/85";
! #endif not lint
  
  #include <stdio.h>
  #include "back.h"
--- 4,12 ----
   * specifies the terms and conditions for redistribution.
   */
  
! #if	!defined(lint) && defined(DOSCCS)
! static char sccsid[] = "@(#)subs.c	5.2 (2.11BSD) 2022/10/3";
! #endif
  
  #include <stdio.h>
  #include "back.h"
***************
*** 77,83 ****
  	buflush();
  	if (read(0,&c,1) != 1)
  		errexit ("readc");
! 	if (c == '\177')
  		getout();
  	if (c == '\033' || c == '\015')
  		return ('\n');
--- 77,83 ----
  	buflush();
  	if (read(0,&c,1) != 1)
  		errexit ("readc");
! 	if (c == '\003')
  		getout();
  	if (c == '\033' || c == '\015')
  		return ('\n');
*** ./usr/src/games/backgammon/table.c.old	Wed May 29 13:38:07 1985
--- ./usr/src/games/backgammon/table.c	Mon Oct  3 16:24:39 2022
***************
*** 4,12 ****
   * specifies the terms and conditions for redistribution.
   */
  
! #ifndef lint
! static char sccsid[] = "@(#)table.c	5.1 (Berkeley) 5/29/85";
! #endif not lint
  
  #include "back.h"
  
--- 4,12 ----
   * specifies the terms and conditions for redistribution.
   */
  
! #if	!defined(lint) && defined(DOSCCS)
! static char sccsid[] = "@(#)table.c	5.2 (2.11BSD) 2022/10/2";
! #endif
  
  #include "back.h"
  
***************
*** 89,95 ****
  		if (tflag)
  			curmove (curr,curc-1);
  		else  {
! 			if (tty.sg_erase == '\010')
  				writel ("\010 \010");
  			else
  				writec (cin[ncin-1]);
--- 89,95 ----
  		if (tflag)
  			curmove (curr,curc-1);
  		else  {
! 			if (tty.sg_erase == '\0177')
  				writel ("\010 \010");
  			else
  				writec (cin[ncin-1]);
***************
*** 112,118 ****
  			curmove (curr,39);
  			ist = -1;
  			goto domove;
! 		} else  if (tty.sg_erase == '\010')  {
  			for (j = 0; j < ncin; j++)
  				writel ("\010 \010");
  			ist = -1;
--- 112,118 ----
  			curmove (curr,39);
  			ist = -1;
  			goto domove;
! 		} else  if (tty.sg_erase == '\0177')  {
  			for (j = 0; j < ncin; j++)
  				writel ("\010 \010");
  			ist = -1;
*** ./usr/src/games/battlestar/Makefile.old	Sun Jan 28 03:22:49 1996
--- ./usr/src/games/battlestar/Makefile	Mon Oct  3 16:50:12 2022
***************
*** 4,10 ****
  # the terms of the Berkeley Software License Agreement.
  #
  
! # @(#)Makefile	1.7.1 1996/1/28
  
  CFLAGS=		-O
  SEPFLAG= -i
--- 4,10 ----
  # the terms of the Berkeley Software License Agreement.
  #
  
! # @(#)Makefile	1.7.2 2022/10/2
  
  CFLAGS=		-O
  SEPFLAG= -i
***************
*** 51,57 ****
  	rm -f xxglobals.c
  
  mkstr:	mkstr.c
! 	cc -O -n -o mkstr mkstr.c
  
  # End of pdp-11 specific instructions
  
--- 51,57 ----
  	rm -f xxglobals.c
  
  mkstr:	mkstr.c
! 	cc ${CFLAGS} -o mkstr mkstr.c
  
  # End of pdp-11 specific instructions
  
*** ./usr/src/games/mille/Makefile.old	Wed Feb 25 21:22:52 1987
--- ./usr/src/games/mille/Makefile	Mon Oct  3 16:56:41 2022
***************
*** 30,40 ****
  .c.i:
  	${CC} ${LDFLAGS} -P $*.c
  
- a.out: ${OBJS} ${CRL}
- 	${CC} ${SEPFLAG} ${LDFLAGS} ${OBJS} ${LIBS}
- 
  mille: ${OBJS} ${CRL}
! 	${CC} ${SEPFLAG} ${CFLAGS} -o mille ${OBJS} ${LIBS}
  
  install: mille
  	install -s mille ${DESTDIR}${BINDIR}
--- 30,37 ----
  .c.i:
  	${CC} ${LDFLAGS} -P $*.c
  
  mille: ${OBJS} ${CRL}
! 	${CC} ${SEPFLAG} ${LDFLAGS} -o mille ${OBJS} ${LIBS}
  
  install: mille
  	install -s mille ${DESTDIR}${BINDIR}
*** ./usr/src/games/hack/Makefile.old	Mon Apr 28 22:14:27 1997
--- ./usr/src/games/hack/Makefile	Mon Oct  3 16:14:22 2022
***************
*** 1,4 ****
! #	#(@)	Makefile	1.2 (2.11BSD)	1997/4/28
  #
  # Hack Overlay Makefile.
  
--- 1,4 ----
! #	#(@)	Makefile	1.3 (2.11BSD)	2022/10/2
  #
  # Hack Overlay Makefile.
  
***************
*** 132,138 ****
  	rm -f *.o x.c xs.c strings crypt makedefs
  
  makedefs:	makedefs.c
! 	cc -o makedefs makedefs.c
  
  hack.onames.h:	makedefs def.objects.h
  	./makedefs > hack.onames.h
--- 132,138 ----
  	rm -f *.o x.c xs.c strings crypt makedefs
  
  makedefs:	makedefs.c
! 	cc ${CFLAGS} -o makedefs makedefs.c
  
  hack.onames.h:	makedefs def.objects.h
  	./makedefs > hack.onames.h
*** ./usr/src/lib/ccom/Makefile.old	Tue Jan  7 13:08:55 2020
--- ./usr/src/lib/ccom/Makefile	Mon Oct  3 17:00:56 2022
***************
*** 25,31 ****
  	rm -f junk.i junk.c junk.s
  
  cvopt:	cvopt.c
! 	${CC} -n -s -O -o cvopt cvopt.c
  
  install: c0 c1
  	-mv ${DESTDIR}${LIB}/c0 ${DESTDIR}${LIB}/oc0
--- 25,31 ----
  	rm -f junk.i junk.c junk.s
  
  cvopt:	cvopt.c
! 	${CC} ${CFLAGS} -o cvopt cvopt.c
  
  install: c0 c1
  	-mv ${DESTDIR}${LIB}/c0 ${DESTDIR}${LIB}/oc0
*** ./usr/src/new/rcs/src/partime.c.old	Sat Aug 13 16:20:40 1988
--- ./usr/src/new/rcs/src/partime.c	Mon Oct  3 17:06:37 2022
***************
*** 26,37 ****
   *		like midnight/noon?
   */
  
! #ifndef lint
  static char rcsid[]=
! "$Header: /arthur/src/local/bin/rcs/src/RCS/partime.c,v 1.2 87/03/27 14:21:53 jenkins Exp $";
  #endif
  
  /* $Log:	partime.c,v $
   * Revision 1.2  87/03/27  14:21:53  jenkins
   * Port to suns
   * 
--- 26,40 ----
   *		like midnight/noon?
   */
  
! #if	!defined(lint) && defined(DOSCCS)
  static char rcsid[]=
! "$Header: /arthur/src/local/bin/rcs/src/RCS/partime.c,v 1.3 2022/10/2 bqt Exp $";
  #endif
  
  /* $Log:	partime.c,v $
+  * Revision 1.3  2022/10/2  00:00:00  bqt
+  * Remove a compile time warning and unused static char array
+  * 
   * Revision 1.2  87/03/27  14:21:53  jenkins
   * Port to suns
   * 
***************
*** 40,46 ****
   * 
   * Revision 1.1  82/05/06  11:38:26  wft
   * Initial revision
-  * 
   */
  
  #include <stdio.h>
--- 43,48 ----
***************
*** 47,56 ****
  #include <ctype.h>
  #include "time.h"
  
- #ifndef lint
- static char timeid[] = TIMEID;
- #endif
- 
  struct tmwent {
  	char *went;
  	union {
--- 49,54 ----
***************
*** 120,126 ****
  	{"pm",           2, TWTIME, TM_AMPM},
  	{"noon",         12,TWTIME+TW1200, 0},    /* Special frobs */
  	{"midnight",     0, TWTIME+TW1200, 0},
! 	{"at",           ptnoise, TWSPEC, 0},    /* Noise word */
  
  	{0, 0, 0, 0},             /* Zero entry to terminate searches */
  };
--- 118,124 ----
  	{"pm",           2, TWTIME, TM_AMPM},
  	{"noon",         12,TWTIME+TW1200, 0},    /* Special frobs */
  	{"midnight",     0, TWTIME+TW1200, 0},
! 	{"at",           (int)ptnoise, TWSPEC, 0},    /* Noise word */
  
  	{0, 0, 0, 0},             /* Zero entry to terminate searches */
  };
*** ./usr/src/ucb/pascal/pi/Makefile.old	Sun Nov 24 10:23:10 2019
--- ./usr/src/ucb/pascal/pi/Makefile	Mon Oct  3 16:14:22 2022
***************
*** 1,5 ****
  #
! # pi Makefile - 1.2.2 2019/11/24
  #
  
  DESTDIR=
--- 1,5 ----
  #
! # pi Makefile - 1.2.3 2022/10/2
  #
  
  DESTDIR=
***************
*** 82,88 ****
  	ex - y.tab.c < gram.ex
  
  version: version.c
! 	${CC} -o version version.c
  
  Version.c: version
  	./version > Version.c
--- 82,88 ----
  	ex - y.tab.c < gram.ex
  
  version: version.c
! 	${CC} ${CFLAGS} -o version version.c
  
  Version.c: version
  	./version > Version.c
***************
*** 117,123 ****
  
  yy.h:		y.tab.h
  Version.o:	Version.c
! 		cc -c Version.c
  TRdata.o:	whoami 0.h
  ato.o:		0.h whoami ato.c
  call.o:		whoami 0.h tree.h opcode.h call.c
--- 117,123 ----
  
  yy.h:		y.tab.h
  Version.o:	Version.c
! 		cc -O -c Version.c
  TRdata.o:	whoami 0.h
  ato.o:		0.h whoami ato.c
  call.o:		whoami 0.h tree.h opcode.h call.c
*** ./usr/src/usr.bin/dc/dc.c.old	Fri Apr 21 22:25:16 2000
--- ./usr/src/usr.bin/dc/dc.c	Mon Oct  3 16:14:22 2022
***************
*** 1,5 ****
  #if	!defined(lint) && defined(DOSCCS)
! static char sccsid[] = "@(#)dc.c	4.3.1	(2.11BSD)	2000/2/12";
  #endif
  
  #include <stdio.h>
--- 1,5 ----
  #if	!defined(lint) && defined(DOSCCS)
! static char sccsid[] = "@(#)dc.c	4.3.2	(2.11BSD)	2022/10/2";
  #endif
  
  #include <stdio.h>
***************
*** 592,598 ****
  	p = salloc(0);
  	if(length(ddivr) == 0){
  		pushp(ddivr);
! 		errorrt("divide by 0\n");
  	}
  	divsign = remsign = 0;
  	divr = ddivr;
--- 592,598 ----
  	p = salloc(0);
  	if(length(ddivr) == 0){
  		pushp(ddivr);
! 		errorrt("divide by 0\n", NULL);
  	}
  	divsign = remsign = 0;
  	divr = ddivr;
***************
*** 715,721 ****
  	if(sfbeg(dr) == 1 || (sfbeg(dr) == 0 && sbackc(dr) == 0)){
  		sputc(dr,skr);
  		pushp(dr);
! 		errorrt("divide by 0\n");
  	}
  	c = k-skd+skr;
  	if(c < 0)r = removr(dd,-c);
--- 715,721 ----
  	if(sfbeg(dr) == 1 || (sfbeg(dr) == 0 && sbackc(dr) == 0)){
  		sputc(dr,skr);
  		pushp(dr);
! 		errorrt("divide by 0\n", 1);
  	}
  	c = k-skd+skr;
  	if(c < 0)r = removr(dd,-c);
*** ./usr/src/usr.bin/dc/dc.h.old	Mon Feb 16 18:21:50 1987
--- ./usr/src/usr.bin/dc/dc.h	Mon Oct  3 16:14:22 2022
***************
*** 1,4 ****
! /*	dc.h	1.3	86/04/26	*/
  
  #define FATAL 0
  #define NFATAL 1
--- 1,4 ----
! /*	dc.h	1.4	2022/10/2	*/
  
  #define FATAL 0
  #define NFATAL 1
***************
*** 44,50 ****
  #define EMPTYS if(stkerr != 0){printf("stack empty\n"); return(1);}
  #define EMPTYSR(x) if(stkerr !=0){printf("stack empty\n");pushp(x);return(1);}
  #define error(p)	{printf(p); continue; }
! #define errorrt(p)	{printf(p); return(1); }
  struct blk {
  	char	*rd;
  	char	*wt;
--- 44,50 ----
  #define EMPTYS if(stkerr != 0){printf("stack empty\n"); return(1);}
  #define EMPTYSR(x) if(stkerr !=0){printf("stack empty\n");pushp(x);return(1);}
  #define error(p)	{printf(p); continue; }
! #define errorrt(p,x)	{printf(p); return(x); }
  struct blk {
  	char	*rd;
  	char	*wt;
*** ./VERSION.old	Sun Oct  9 16:15:18 2022
--- ./VERSION	Sun Oct  9 16:13:54 2022
***************
*** 1,5 ****
! Current Patch Level: 477
! Date: September 25, 2022
  
  2.11 BSD
  ============
--- 1,5 ----
! Current Patch Level: 478
! Date: October 9, 2022
  
  2.11 BSD
  ============
